<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="Admin">
 	<insert id="boardCategoryInsert" parameterType="BoardCategory">
 		INSERT INTO BOARDCATEGORY(BCNUMBER, BCNAME)
 		VALUES(BCNUMBER_SEQ.NEXTVAL, #{BCNAME})
 	</insert>
 	
 	<select id="boardCategoryList" resultType="BoardCategory">
 		SELECT *
		FROM BOARDCATEGORY
		ORDER BY BCNUMBER
 	</select>
 	
 	<insert id="packageInsert" parameterType="Package">
 		INSERT INTO PACKAGE(PNUMBER, PNAME, PIMG, PADULT, PCHILD, PINFANT, PPERIOD, PMIN, PMAX, PUPLOADDATE, PINFO)
 		VALUES(PNUMBER_SEQ.NEXTVAL, #{PNAME}, #{PIMG}, #{PADULT}, #{PCHILD}, #{PINFANT}, #{PPERIOD}, #{PMIN}, #{PMAX}, DEFAULT, #{PINFO})
 	</insert>
 	
 	<select id="adminJobList" parameterType="Member" resultType="AdminJobList">
 		SELECT MID,
 			ADATE,
 			AJOB
 		FROM ADMINJOBLIST
 		WHERE MID = #{MID}
 		ORDER BY ADATE DESC
 	</select>
 	
 	<select id="categoryList" resultType="Category">
 		SELECT *
		FROM CATEGORY
		ORDER BY CNUMBER
 	</select>
 	
 	<insert id="categoryInsert" parameterType="Category">
 		INSERT INTO CATEGORY(CNUMBER, CNAME)
 		VALUES(CNUMBER_SEQ.NEXTVAL, #{CNAME})
 	</insert>
 	
 	<insert id="jobListInsert" parameterType="AdminJobList">
 		INSERT INTO ADMINJOBLIST(MID, ADATE, AJOB)
 		VALUES(#{MID}, DEFAULT, #{AJOB})
 	</insert>
 	
 	<select id="complaintBoardList" resultType="BoardList">
 		SELECT B.BNUMBER,
    			B.BTITLE,
    			B.BDATE,
    			B.BIMG,
    			B.BSTATE,
    			BC.BCNAME,
    			M.MNICK,
    			BV.BOARDVIEWS,
    			BL.BOARDLIKE,
    			BC.BOARDCOMPLAINT
		FROM BOARD B INNER JOIN MEMBER M ON B.MID = M.MID
            		INNER JOIN BOARDCATEGORY BC ON B.BCNUMBER = BC.BCNUMBER
           			LEFT OUTER JOIN (SELECT BNUMBER,
                                			COUNT(MID) AS "BOARDVIEWS"
                        			FROM BOARDVIEWS
                        			GROUP BY BNUMBER) BV ON B.BNUMBER = BV.BNUMBER
            		LEFT OUTER JOIN (SELECT BNUMBER,
                                    		COUNT(MID) AS "BOARDLIKE"
                            		FROM BOARDLIKE
                            		GROUP BY BNUMBER) BL ON B.BNUMBER = BL.BNUMBER
            		LEFT OUTER JOIN (SELECT BNUMBER,
                                    		COUNT(MID) AS "BOARDCOMPLAINT"
                            		FROM BOARDCOMPLAINT
                            		GROUP BY BNUMBER) BC ON B.BNUMBER = BC.BNUMBER
 		ORDER BY BNUMBER DESC
 	</select>
 	
 	<select id="travelerList" resultType="TravelerList">
 		SELECT T.OPNUMBER,
            T.ODATE,
            P.PNAME,
            T.TNAME,
            T.TENNAME,
            T.TBIRTH,
            T.TEMAIL,
            T.TPHONE,
            O.PSSTART
        FROM TRAVELER T INNER JOIN PACKAGE P ON T.OPNUMBER = P.PNUMBER
                        INNER JOIN ORDERS O ON T.OPNUMBER = O.PNUMBER AND T.ODATE = O.ODATE AND T.OMID = O.MID
        ORDER BY ODATE DESC
 	</select>
 	
 	<select id="memberList" parameterType="Member" resultType="MemberList">
 		SELECT M.MID,
		    M.MNICK,
		    M.MNAME,
		    M.MPHONE,
		    M.MGENDER,
		    M.MSTATE,
		    BC.BOARDCOMPLAINT,
		    CC.COMMENTSCOMPLAINT,
		    AB.ACCOUNTBAN,
            PO.POAMOUNT
		FROM MEMBER M LEFT OUTER JOIN (SELECT MID,
		                                    COUNT(BNUMBER) AS "BOARDCOMPLAINT"
		                                FROM(SELECT B.BNUMBER,
		                                            B.MID,
		                                            COUNT(BC.MID) AS "BOARDCOMPLAINT"
		                                        FROM BOARD B LEFT OUTER JOIN BOARDCOMPLAINT BC ON B.BNUMBER = BC.BNUMBER
		                                        GROUP BY B.BNUMBER, B.MID)
		                                WHERE BOARDCOMPLAINT > 0
		                                GROUP BY MID) BC ON M.MID = BC.MID
		                LEFT OUTER JOIN (SELECT MID,
		                                        COUNT(*) AS "COMMENTSCOMPLAINT"
		                                FROM (SELECT CM.BNUMBER,
		                                                CM.MID,
		                                                CM.CMDATE,
		                                                COUNT(CC.MID) AS "COMMENTSCOMPLAINT"
		                                        FROM COMMENTS CM LEFT OUTER JOIN COMMENTSCOMPLAINT CC ON CM.BNUMBER = CC.CMBNUMBER AND CM.MID = CC.CMMID AND CM.CMDATE = CC.CMDATE
		                                        GROUP BY CM.BNUMBER, CM.MID, CM.CMDATE)
		                                WHERE COMMENTSCOMPLAINT > 0
		                                GROUP BY MID) CC ON M.MID = CC.MID
		                LEFT OUTER JOIN (SELECT MID,
		                                    COUNT(ABDATE) AS "ACCOUNTBAN"
		                                FROM ACCOUNTBAN
		                                GROUP BY MID) AB ON M.MID = AB.MID
                        LEFT OUTER JOIN (SELECT MID,
                                            SUM(POAMOUNT * POSTATE) AS "POAMOUNT"
                                        FROM POINT
                                        GROUP BY MID) PO ON M.MID = PO.MID
		 WHERE M.MLEVEL = #{MLEVEL}
 	</select>
 	
 	<update id="memberStateUpdate" parameterType="Member">
 		UPDATE MEMBER SET MSTATE = #{MSTATE} WHERE MID = #{MID}
 	</update>
 	
 	<update id="commentsLock" parameterType="Comments">
 		UPDATE COMMENTS
		SET CMSTATE = #{CMSTATE}
		WHERE BNUMBER = #{BNUMBER} AND MID = #{MID} AND CMDATE = TO_DATE(#{CMDATE}, 'YYYY-MM-DD HH24:MI:SS')
 	</update>
 	
 	<update id="boardLock" parameterType="Board">
 		UPDATE BOARD
 		SET BSTATE = #{BSTATE}
 		WHERE BNUMBER = #{BNUMBER}
 	</update>
 	
 	<select id="packageDetail" parameterType="Package" resultType="Package">
 		SELECT * FROM PACKAGE WHERE PNUMBER = #{PNUMBER}
 	</select>
 	
 	<update id="packageUpdate">
 		UPDATE PACKAGE
 		SET PNAME = #{PNAME}, PADULT = #{PADULT}, PCHILD = #{PCHILD}, PINFANT = #{PINFANT}, PMIN = #{PMIN}, PMAX = #{PMAX},	PINFO = #{PINFO}, PPERIOD = #{PPERIOD}
 		WHERE PNUMBER = #{PNUMBER}
 	</update>
 	
 	<insert id="accountBanInsert" parameterType="Member">
 		INSERT INTO ACCOUNTBAN(MID, ABDATE)
 		VALUES(#{MID}, DEFAULT)
 	</insert>
 	
 	<select id="complaintBoardDetail" parameterType="Board" resultType="BoardComplaintDetail">
 		SELECT BC.*,
		    B.MID,
		    B.MNICK
		FROM (SELECT BC.BNUMBER,
		        BC.MID AS "BCMID",
		        BC.BCREASON,
		        BC.BCDATE,
		        M.MNICK AS "BCMNICK"
		    FROM BOARDCOMPLAINT BC INNER JOIN MEMBER M ON BC.MID = M.MID) BC
		    INNER JOIN
		    (SELECT B.BNUMBER,
		        B.MID,
		        M.MNICK
		    FROM BOARD B INNER JOIN MEMBER M ON B.MID = M.MID) B ON BC.BNUMBER = B.BNUMBER
		WHERE BC.BNUMBER = #{BNUMBER}
 	</select>
 	
 	<select id="complaintCommentsDetail" parameterType="Comments" resultType="CommentsComplaintDetail">
 		SELECT CC.*,
			M.MNICK
		FROM COMMENTSCOMPLAINT CC INNER JOIN MEMBER M ON CC.MID = M.MID
		WHERE CC.CMBNUMBER = #{BNUMBER} AND CC.CMMID = #{MID} AND CC.CMDATE = TO_DATE(#{CMDATE}, 'YYYY-MM-DD HH24:MI:SS')
 	</select>
 	
 	<select id="boardCategoryCheck" parameterType="BoardCategory" resultType="String">
 		SELECT COUNT(BCNUMBER)
 		FROM BOARDCATEGORY
 		WHERE BCNAME = #{BCNAME}
 	</select>
	
 	<update id="boardCategoryUpdate" parameterType="BoardCategory">
 		UPDATE BOARDCATEGORY
		SET BCNAME = #{BCNAME}
		WHERE BCNUMBER = #{BCNUMBER}
 	</update>
 	 	
 	<select id="categoryCheck" parameterType="Category" resultType="String">
		SELECT COUNT(CNUMBER)
		FROM CATEGORY
		WHERE CNAME = #{CNAME}
	</select>
 	
 	 <update id="categoryUpdate" parameterType="Category">
 		UPDATE CATEGORY
		SET CNAME = #{CNAME}
		WHERE CNUMBER = #{CNUMBER}
 	</update>
 	
 	<select id="memberInfo" parameterType="Member" resultType="MemberInfo">
 		SELECT M.MID,
				M.MNAME,
				M.MNICK,
				M.MPHONE,
				M.MGENDER,
				M.MBIRTH,
				PO.POAMOUNT,
		        AB.ABCOUNT,
		        B.BCOUNT,
		        CM.CMCOUNT,
		        RV.RVCOUNT,
		        RVB.RVBCOUNT
		FROM MEMBER M LEFT OUTER JOIN (SELECT MID,
		                            SUM(POAMOUNT * POSTATE) AS "POAMOUNT"
		                        FROM POINT
		                        GROUP BY MID) PO ON M.MID = PO.MID
		            LEFT OUTER JOIN (SELECT MID,
		                                COUNT(ABDATE) AS "ABCOUNT"
		                            FROM ACCOUNTBAN
		                            GROUP BY MID) AB ON M.MID = AB.MID
		            LEFT OUTER JOIN (SELECT MID,
		                                COUNT(BNUMBER) AS "BCOUNT"
		                            FROM BOARD
		                            WHERE BCNUMBER != 3
		                            GROUP BY MID) B ON M.MID = B.MID
		            LEFT OUTER JOIN (SELECT MID,
		                                COUNT(*) AS "CMCOUNT"
		                            FROM COMMENTS
		                            GROUP BY MID) CM ON M.MID = CM.MID
		            LEFT OUTER JOIN (SELECT MID,
		                                COUNT(PNUMBER) AS "RVCOUNT"
		                            FROM REVIEW
		                            GROUP BY MID) RV ON M.MID = RV.MID
		            LEFT OUTER JOIN (SELECT MID,
		                                COUNT(BNUMBER) AS "RVBCOUNT"
		                            FROM BOARD
		                            WHERE BCNUMBER = 3
		                            GROUP BY MID) RVB ON M.MID = RVB.MID
		WHERE M.MID = #{MID}
 	</select>
 	
 	<insert id="pointInsert">
 		INSERT INTO POINT(MID, PODATE, POAMOUNT, POSTATE, POINFO)
 		VALUES(#{MID}, DEFAULT, #{POAMOUNT}, #{POSTATE}, #{POINFO})
 	</insert>
 </mapper>